import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk
import numpy as np
import cv2

def apply_gaussian_blur(img_array):
    blurred_array = cv2.cvtColor(img_array,cv2.COLOR_BGR2GRAY)
    return blurred_array

def load_image():
    file_path = filedialog.askopenfilename()
    if not file_path:
        return
    
    original_image = Image.open(file_path)
    img_array = np.array(original_image)
    
    blurred_array = apply_gaussian_blur(img_array)
    blurred_image = Image.fromarray(blurred_array)
    
    original_img_tk = ImageTk.PhotoImage(original_image.resize((250, 250)))
    blurred_img_tk = ImageTk.PhotoImage(blurred_image.resize((250, 250)))
    
    original_label.configure(image=original_img_tk)
    original_label.image = original_img_tk
    blurred_label.configure(image=blurred_img_tk)
    blurred_label.image = blurred_img_tk

# Set up the main window
window = tk.Tk()
window.title("Image Filtering App")
window.geometry("600x300")

# Add a button to load image
btn_load = tk.Button(window, text="Load Image", command=load_image)
btn_load.pack()

# Add labels to show images
original_label = tk.Label(window)
original_label.pack(side=tk.LEFT, padx=10)

blurred_label = tk.Label(window)
blurred_label.pack(side=tk.RIGHT, padx=10)

window.mainloop()
